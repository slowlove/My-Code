CCS PCM C Compiler, Version 4.068, 53086               02-th5-08 01:56

               Filename: G:\Mach dien\Lap trinh C\CCS\Lap trinh nang cao\timer.lst

               ROM used: 106 words (1%)
                         Largest free fragment is 2048
               RAM used: 18 (5%) at main() level
                         18 (5%) worst case
               Stack:    1 worst case (0 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   04F
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  MOVF   7B,W
0016:  MOVWF  27
0017:  BCF    03.7
0018:  BCF    03.5
0019:  BTFSS  0B.5
001A:  GOTO   01D
001B:  BTFSC  0B.2
001C:  GOTO   030
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   27,W
0028:  MOVWF  7B
0029:  MOVF   20,W
002A:  MOVWF  0A
002B:  SWAPF  21,W
002C:  MOVWF  03
002D:  SWAPF  7F,F
002E:  SWAPF  7F,W
002F:  RETFIE
0030:  BCF    0A.3
0031:  BCF    0A.4
0032:  GOTO   033
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #device *=16 
.................... #fuses NOWDT,HS,NOPUT,NOPROTECT,NODEBUG,NOBROWNOUT,NOLVP,NOCPD,NOWRT      //khai baìo caìc thiêìt ðãòt cho PIC 
.................... #use delay(clock=24000000)                               //khai baìo sýÒ duòng thaòch anh 20Mhz ðêÒ sýÒ duòng haÌm delay cuÒa chýõng triÌnh 
.................... /*************************************************************************************/ 
.................... unsigned char a=0x01; 
*
005A:  MOVLW  01
005B:  BCF    03.5
005C:  MOVWF  28
.................... long value; 
.................... #int_timer0 
.................... void ngat(void){ 
.................... set_timer0(106); 
*
0033:  MOVLW  6A
0034:  MOVWF  01
.................... value++; 
0035:  INCF   29,F
0036:  BTFSC  03.2
0037:  INCF   2A,F
.................... if(value==10000){ 
0038:  MOVF   29,W
0039:  SUBLW  10
003A:  BTFSS  03.2
003B:  GOTO   04B
003C:  MOVF   2A,W
003D:  SUBLW  27
003E:  BTFSS  03.2
003F:  GOTO   04B
.................... output_c(a<<=1); 
0040:  BCF    03.0
0041:  RLF    28,F
0042:  MOVLW  00
0043:  MOVWF  2B
0044:  BSF    03.5
0045:  CLRF   07
0046:  BCF    03.5
0047:  MOVF   28,W
0048:  MOVWF  07
.................... value=0;} 
0049:  CLRF   2A
004A:  CLRF   29
.................... } 
004B:  BCF    0B.2
004C:  BCF    0A.3
004D:  BCF    0A.4
004E:  GOTO   01D
.................... void main(void){ 
004F:  CLRF   04
0050:  BCF    03.7
0051:  MOVLW  1F
0052:  ANDWF  03,F
0053:  BSF    03.5
0054:  BSF    1F.0
0055:  BSF    1F.1
0056:  BSF    1F.2
0057:  BCF    1F.3
0058:  MOVLW  07
0059:  MOVWF  1C
.................... enable_interrupts(int_timer0); 
*
005F:  BSF    0B.5
.................... setup_timer_0(rtcc_internal|rtcc_div_4);   //choòn xung dao ðông nôòi vaÌ hêò sôì chia trýõìc theo tiÒ lêò 1/4 
0060:  BSF    03.5
0061:  MOVF   01,W
0062:  ANDLW  C0
0063:  IORLW  01
0064:  MOVWF  01
.................... enable_interrupts(global); 
0065:  MOVLW  C0
0066:  BCF    03.5
0067:  IORWF  0B,F
.................... while(true); 
0068:  GOTO   068
.................... } 
0069:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD NOWRT
