CCS PCM C Compiler, Version 4.068, 53086               23-th6-08 21:04

               Filename: G:\Lap trinh C\CCS\Lap trinh nang cao\LCD_temp_LCD_4 bit.lst

               ROM used: 1220 words (15%)
                         Largest free fragment is 2048
               RAM used: 27 (7%) at main() level
                         54 (15%) worst case
               Stack:    5 worst case (4 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   3D6
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  MOVF   7B,W
0016:  MOVWF  27
0017:  BCF    03.7
0018:  BCF    03.5
0019:  BTFSS  0B.5
001A:  GOTO   01D
001B:  BTFSC  0B.2
001C:  GOTO   030
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   27,W
0028:  MOVWF  7B
0029:  MOVF   20,W
002A:  MOVWF  0A
002B:  SWAPF  21,W
002C:  MOVWF  03
002D:  SWAPF  7F,F
002E:  SWAPF  7F,W
002F:  RETFIE
0030:  BCF    0A.3
0031:  BCF    0A.4
0032:  GOTO   06A
.................... /***************************************************************************** 
.................... **           ----Chuong trinh hien thi nhiet do bang sensor LM35----        ** 
.................... **           xay dung:23/06/2008                                            ** 
.................... **           Thong so:                                                      ** 
.................... **           +dai nhiet do hoat dong 0-99°C                                 ** 
.................... **           +sai so so voi nhiet do thuc:0.3%                              ** 
.................... **           +xac suat sai so:33% so lan nhiet do thay doi                  ** 
.................... **           +hien thi nhiet do ra LCD va led 7 doan-                       ** 
.................... **           Lap trinh:Slowlove                                             ** 
.................... **           YM:love_classicalguitar||slow_in_love                          ** 
.................... **           E-Mail:Guitar.mp3@gmail.com                                    ** 
.................... *****************************************************************************/ 
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #device *=16 adc=10 
.................... #include <lcd4b_lib.c> 
.................... /*********Thu vien cac ham dung cho LCD cua Slowlove**********/ 
.................... /* xay dung:23/06/2008*/ 
.................... /*Luu y:truoc khi dung thu vien nay phai dong bo cac bien va cac gia tri khai bao trong chuong trinh*/ 
.................... /*---------------------------------------------------------------------------------------------------------*/ 
.................... #use delay(clock=20000000)   //khai bao tan so thach anh su dung trong chuong trinh 
*
00A0:  MOVLW  36
00A1:  MOVWF  04
00A2:  BCF    03.7
00A3:  MOVF   00,W
00A4:  BTFSC  03.2
00A5:  GOTO   0B3
00A6:  MOVLW  06
00A7:  MOVWF  78
00A8:  CLRF   77
00A9:  DECFSZ 77,F
00AA:  GOTO   0A9
00AB:  DECFSZ 78,F
00AC:  GOTO   0A8
00AD:  MOVLW  7B
00AE:  MOVWF  77
00AF:  DECFSZ 77,F
00B0:  GOTO   0AF
00B1:  DECFSZ 00,F
00B2:  GOTO   0A6
.................... /******Dinh nghia cac chan su dung trong chuomg trinh******/ 
.................... #bit RS   = 0x08.0   //chan d0 
.................... #bit RW   = 0x08.1 
.................... #bit E    = 0x08.2 
.................... #bit d0   = 0x08.3 
.................... #bit d1   = 0x08.4 
.................... #bit d2   = 0x08.5 
.................... #bit d3   = 0x08.6 
.................... #bit OE   = 0x08.7   //chan d7 
.................... /*--------------------------------------------------------------------------------------------------------*/ 
.................... unsigned int8 data; 
.................... /*******cac trang thai tin hieu dieu khien*********/ 
.................... void enable(void){   //1 xung enable 
.................... E=1; 
*
0071:  BSF    08.2
.................... delay_cycles(1);   //doi 1 chu ki may 
0072:  NOP
.................... E=0; //1 xung E 1=>0 dung de kich hoat lenh 
0073:  BCF    08.2
.................... delay_us(50);   //doi 50us de thuc hien xong lenh 
0074:  MOVLW  53
0075:  MOVWF  77
0076:  DECFSZ 77,F
0077:  GOTO   076
.................... } 
0078:  RETLW  00
.................... /*----------------------------*/ 
.................... void command(void) 
.................... { 
.................... /*chon thanh ghi va chon che do read/write*/ 
.................... RS=0; //chon thanh ghi:RS=0:chon IR;RS=1:chon thanh ghi DR 
0079:  BCF    08.0
.................... RW=0; //chon che do:RW=0:chon che do ghi;RW=1:chon che do doc 
007A:  BCF    08.1
.................... d0=bit_test(data,4); 
007B:  BTFSS  28.4
007C:  BCF    08.3
007D:  BTFSC  28.4
007E:  BSF    08.3
.................... d1=bit_test(data,5); 
007F:  BTFSS  28.5
0080:  BCF    08.4
0081:  BTFSC  28.5
0082:  BSF    08.4
.................... d2=bit_test(data,6); 
0083:  BTFSS  28.6
0084:  BCF    08.5
0085:  BTFSC  28.6
0086:  BSF    08.5
.................... d3=bit_test(data,7); 
0087:  BTFSS  28.7
0088:  BCF    08.6
0089:  BTFSC  28.7
008A:  BSF    08.6
.................... enable(); 
008B:  CALL   071
.................... d0=bit_test(data,0); 
008C:  BTFSS  28.0
008D:  BCF    08.3
008E:  BTFSC  28.0
008F:  BSF    08.3
.................... d1=bit_test(data,1); 
0090:  BTFSS  28.1
0091:  BCF    08.4
0092:  BTFSC  28.1
0093:  BSF    08.4
.................... d2=bit_test(data,2); 
0094:  BTFSS  28.2
0095:  BCF    08.5
0096:  BTFSC  28.2
0097:  BSF    08.5
.................... d3=bit_test(data,3); 
0098:  BTFSS  28.3
0099:  BCF    08.6
009A:  BTFSC  28.3
009B:  BSF    08.6
.................... enable(); 
009C:  CALL   071
.................... } 
009D:  RETLW  00
.................... void display(void) 
.................... { 
.................... RS=1; 
*
00F9:  BSF    08.0
.................... RW=0; 
00FA:  BCF    08.1
.................... d0=bit_test(data,4); 
00FB:  BTFSS  28.4
00FC:  BCF    08.3
00FD:  BTFSC  28.4
00FE:  BSF    08.3
.................... d1=bit_test(data,5); 
00FF:  BTFSS  28.5
0100:  BCF    08.4
0101:  BTFSC  28.5
0102:  BSF    08.4
.................... d2=bit_test(data,6); 
0103:  BTFSS  28.6
0104:  BCF    08.5
0105:  BTFSC  28.6
0106:  BSF    08.5
.................... d3=bit_test(data,7); 
0107:  BTFSS  28.7
0108:  BCF    08.6
0109:  BTFSC  28.7
010A:  BSF    08.6
.................... enable(); 
010B:  CALL   071
.................... d0=bit_test(data,0); 
010C:  BTFSS  28.0
010D:  BCF    08.3
010E:  BTFSC  28.0
010F:  BSF    08.3
.................... d1=bit_test(data,1); 
0110:  BTFSS  28.1
0111:  BCF    08.4
0112:  BTFSC  28.1
0113:  BSF    08.4
.................... d2=bit_test(data,2); 
0114:  BTFSS  28.2
0115:  BCF    08.5
0116:  BTFSC  28.2
0117:  BSF    08.5
.................... d3=bit_test(data,3); 
0118:  BTFSS  28.3
0119:  BCF    08.6
011A:  BTFSC  28.3
011B:  BSF    08.6
.................... enable(); 
011C:  CALL   071
.................... } 
011D:  RETLW  00
.................... /********khoi tao,khai bao cac thong so hoat dong cho LCD**********/ 
.................... void khoitao(int1 giao_thuc,int1 so_dong,int1 do_phan_giai) 
.................... { 
.................... /*giao_thuc =1 hoac 0:che do 8 hoac 4 bit; 
....................   so_dong =1 hoac 0:che do hien thi 2 hoac 1 dong 
....................   do_phangiai =1 hoac 0:hien thi 5x10 hoac 5x8 diem anh 
.................... Chu y:trong che do hient hi 2 hang thi khong the hien thi che do 5x10 diem anh 
.................... va ban dau luc cap nguon cho LCD mac dinh se hoat dong o che do 8 bit nen 
.................... khong the thuc hien cac lenh dat giao thuc cho LCD bang giao thuc 4 bit nen  
.................... phai send 4 bit cao truoc de chuyen bi giao thuc 4 bit roi moi thuc hien nhung 
.................... thiet dat tiep theo va cac lenh tiep theo se duoc thuc hien theo giao thuc 4 bit*/ 
.................... delay_ms(40);   //doi 40ms de cho LCD dat toi 4.5V 
*
009E:  MOVLW  28
009F:  MOVWF  36
.................... data=0x20+(giao_thuc<<4)+(so_dong<<3)+(do_phan_giai<<2);   //data phai duoc dinh nghia truoc trong chuong trinh chinh 
*
00B3:  SWAPF  33,W
00B4:  MOVWF  77
00B5:  MOVLW  F0
00B6:  ANDWF  77,F
00B7:  MOVF   77,W
00B8:  ADDLW  20
00B9:  MOVWF  36
00BA:  RLF    34,W
00BB:  MOVWF  77
00BC:  RLF    77,F
00BD:  RLF    77,F
00BE:  MOVLW  F8
00BF:  ANDWF  77,F
00C0:  MOVF   77,W
00C1:  ADDWF  36,W
00C2:  MOVWF  37
00C3:  RLF    35,W
00C4:  MOVWF  77
00C5:  RLF    77,F
00C6:  MOVLW  FC
00C7:  ANDWF  77,F
00C8:  MOVF   77,W
00C9:  ADDWF  37,W
00CA:  MOVWF  28
.................... RS=0; //chon thanh ghi:RS=0:chon IR;RS=1:chon thanh ghi DR 
00CB:  BCF    08.0
.................... RW=0; //chon che do:RW=0:chon che do ghi;RW=1:chon che do doc 
00CC:  BCF    08.1
.................... d0=bit_test(data,4);                                  
00CD:  BTFSS  28.4
00CE:  BCF    08.3
00CF:  BTFSC  28.4
00D0:  BSF    08.3
.................... d1=bit_test(data,5); 
00D1:  BTFSS  28.5
00D2:  BCF    08.4
00D3:  BTFSC  28.5
00D4:  BSF    08.4
.................... d2=bit_test(data,6); 
00D5:  BTFSS  28.6
00D6:  BCF    08.5
00D7:  BTFSC  28.6
00D8:  BSF    08.5
.................... d3=bit_test(data,7); 
00D9:  BTFSS  28.7
00DA:  BCF    08.6
00DB:  BTFSC  28.7
00DC:  BSF    08.6
.................... E=1; 
00DD:  BSF    08.2
.................... delay_cycles(1);   //doi 1 chu ki may 
00DE:  NOP
.................... E=0; //1 xung E 1=>0 dung de kich hoat lenh 
00DF:  BCF    08.2
.................... delay_us(50);   //doi 50us de thuc hien xong lenh 
00E0:  MOVLW  53
00E1:  MOVWF  77
00E2:  DECFSZ 77,F
00E3:  GOTO   0E2
.................... command(); 
00E4:  CALL   079
.................... } 
00E5:  BCF    0A.3
00E6:  BCF    0A.4
00E7:  GOTO   410 (RETURN)
.................... /*****Xoa man hinh tro ve dau dong*****/ 
.................... void clear(void) 
.................... { 
.................... data=0x01; 
*
03D2:  MOVLW  01
03D3:  MOVWF  28
.................... command(); 
03D4:  CALL   079
.................... } 
03D5:  RETLW  00
.................... /******di chuyen con tro ve dau dong*******/ 
.................... void return_home(void) 
.................... { 
.................... data=0x02; 
.................... command(); 
.................... } 
.................... /*******Hien thi con tro********/ 
.................... void cursor(int1 manhinh,int1 contro,int1 kieu_contro) 
.................... { 
.................... /*manhinh = 1 hoac bang 0:hien thi man hinh hoac khong hien thi man hinh 
....................   contro  = 1 hoac bang 0:hien thi con tro hoac khong hien thi con tro 
....................   kieu_contro =1 hoac bang 0:2 che do hien thi con tro*/ 
.................... data=0x08+(manhinh<<2)+(contro<<1)+(kieu_contro); 
*
00E8:  RLF    33,W
00E9:  MOVWF  77
00EA:  RLF    77,F
00EB:  MOVLW  FC
00EC:  ANDWF  77,F
00ED:  MOVF   77,W
00EE:  ADDLW  08
00EF:  MOVWF  36
00F0:  BCF    03.0
00F1:  RLF    34,W
00F2:  ADDWF  36,W
00F3:  ADDWF  35,W
00F4:  MOVWF  28
.................... command(); 
00F5:  CALL   079
.................... } 
00F6:  BCF    0A.3
00F7:  BCF    0A.4
00F8:  GOTO   415 (RETURN)
.................... /******Dua con tro toi 1 toa do cho truoc*******/ 
.................... void moveto(unsigned char dong,unsigned char vitri) 
.................... { 
.................... /*nguoi dung se nhap toa do cua vi tri can hien thi tren LCD,cu the la dong 1 
.................... hay dong 2,vi tri cua con tro can hien thi 1 to 16*/ 
.................... if(dong==1)data=0x80+(vitri-1);  //dong 1 co dia chi bat dau tu 0x80 
*
011E:  DECFSZ 33,W
011F:  GOTO   125
0120:  MOVLW  01
0121:  SUBWF  34,W
0122:  ADDLW  80
0123:  MOVWF  28
.................... else data=0xC0+(vitri-1);        //dog 2 co dia chi bat dau tu 0x0C 
0124:  GOTO   129
0125:  MOVLW  01
0126:  SUBWF  34,W
0127:  ADDLW  C0
0128:  MOVWF  28
.................... command(); 
0129:  CALL   079
.................... } 
012A:  RETLW  00
.................... /********Di chuyen con tro va ki tu********/ 
.................... void motion(int1 contents,int1 trend) 
.................... { 
.................... /* contents = 0 hoac 1:chon con tro hoac ca con tro & van ban 
....................    trend = 0 hoac 1: chon huong sang trai hoac sang phai voi con tro,van ban theo 
....................    chieu nguoc lai 0 hoac 1 sang phai hoac sang trai 
....................    Chu y: neu o che do hien thi 2 hang thi khi het dong dong dau tien thi se 
....................    tu dong chuyen xuong duong thu 2,du lieu hang dau va hang 2 cung dich 1 luc*/  
.................... data=0x10+(contents<<=3)+(trend<<=2); 
.................... command(); 
.................... } 
.................... /******thiet lap thong so hien thi******/ 
.................... void modeset(int1 trend,int1 mode) 
.................... { 
.................... /* trend = 0 hoac 1 :dich sang phai hoac trai 
....................    mode  = 0 hoac 1 :khong dich hoac dich hien thi*/ 
.................... data=0x04+(trend<<1)+mode; 
.................... command(); 
.................... } 
.................... /*~~~~~~~~~~~~~~~~~~~~~~~~~~~The End~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 
....................  
.................... #fuses NOWDT,HS,NOPUT,NOPROTECT,NODEBUG,NOBROWNOUT,NOLVP,NOCPD,NOWRT      //khai bao cac thiet dat cho PIC 
.................... #use delay(clock=20M)  //khai bao su dung thach anh 20MHz de su dung ham delay cua chuong trinh 
.................... /**************Ket thuc khai bao*****************/ 
.................... #bit RS   = 0x08.0   //chan d0 
.................... #bit RW   = 0x08.1 
.................... #bit E    = 0x08.2 
.................... #bit d0   = 0x08.3 
.................... #bit d1   = 0x08.4 
.................... #bit d2   = 0x08.5 
.................... #bit d3   = 0x08.6 
.................... #bit OE   = 0x08.7   //chan d7 
.................... /*******Cac hang va bien su ducng trong chuong trinh**********/ 
.................... extern unsigned int8 data; // bien toan cuc data da duoc dinh nghia trong LCD4b_lib 
.................... const unsigned char str[]={"Nhiet do:"}; 
.................... const unsigned char str1[]={"QUA MUC CHO PHEP"}; 
.................... const unsigned char str2[]={"Sensor [-LM35-]"}; 
.................... unsigned int8 hangchuc,hangdonvi,thapphan; 
.................... unsigned int8 a;  //bien dem so ki tu trong chuoi ki tu 
.................... unsigned int16 x; 
.................... float nhietdo; 
.................... /*****Chuong trinh doi gia tri ADC tra ve ra °C*******/ 
.................... float temp(float value){ 
.................... float t; 
.................... t=(value/1023)*500;  //doi ra °C su dung ADC 10 bit,Vref=5V,ung voi thay doi 10mV/1°C 
*
02F7:  MOVF   3A,W
02F8:  MOVWF  44
02F9:  MOVF   39,W
02FA:  MOVWF  43
02FB:  MOVF   38,W
02FC:  MOVWF  42
02FD:  MOVF   37,W
02FE:  MOVWF  41
02FF:  CLRF   48
0300:  MOVLW  C0
0301:  MOVWF  47
0302:  MOVLW  7F
0303:  MOVWF  46
0304:  MOVLW  88
0305:  MOVWF  45
0306:  CALL   17B
0307:  MOVF   77,W
0308:  MOVWF  3F
0309:  MOVF   78,W
030A:  MOVWF  40
030B:  MOVF   79,W
030C:  MOVWF  41
030D:  MOVF   7A,W
030E:  MOVWF  42
030F:  MOVWF  46
0310:  MOVF   79,W
0311:  MOVWF  45
0312:  MOVF   78,W
0313:  MOVWF  44
0314:  MOVF   77,W
0315:  MOVWF  43
0316:  CLRF   4A
0317:  CLRF   49
0318:  MOVLW  7A
0319:  MOVWF  48
031A:  MOVLW  87
031B:  MOVWF  47
031C:  CALL   245
031D:  MOVF   7A,W
031E:  MOVWF  3E
031F:  MOVF   79,W
0320:  MOVWF  3D
0321:  MOVF   78,W
0322:  MOVWF  3C
0323:  MOVF   77,W
0324:  MOVWF  3B
.................... t=((unsigned int16)(t*10))/10.0;   //chinh xac toi 1 chu so sau dau phay,SD 10.0 kieu float de tu chuyen doi kieu phep tinh 
0325:  MOVF   3E,W
0326:  MOVWF  46
0327:  MOVF   3D,W
0328:  MOVWF  45
0329:  MOVF   3C,W
032A:  MOVWF  44
032B:  MOVF   3B,W
032C:  MOVWF  43
032D:  CLRF   4A
032E:  CLRF   49
032F:  MOVLW  20
0330:  MOVWF  48
0331:  MOVLW  82
0332:  MOVWF  47
0333:  CALL   245
0334:  MOVF   7A,W
0335:  MOVWF  42
0336:  MOVF   79,W
0337:  MOVWF  41
0338:  MOVF   78,W
0339:  MOVWF  40
033A:  MOVF   77,W
033B:  MOVWF  3F
033C:  CALL   2BA
033D:  MOVF   79,W
033E:  MOVWF  40
033F:  MOVF   78,W
0340:  MOVWF  3F
0341:  MOVF   79,W
0342:  MOVWF  42
0343:  MOVF   78,W
0344:  MOVWF  41
0345:  CALL   15E
0346:  MOVF   7A,W
0347:  MOVWF  44
0348:  MOVF   79,W
0349:  MOVWF  43
034A:  MOVF   78,W
034B:  MOVWF  42
034C:  MOVF   77,W
034D:  MOVWF  41
034E:  CLRF   48
034F:  CLRF   47
0350:  MOVLW  20
0351:  MOVWF  46
0352:  MOVLW  82
0353:  MOVWF  45
0354:  CALL   17B
0355:  MOVF   7A,W
0356:  MOVWF  3E
0357:  MOVF   79,W
0358:  MOVWF  3D
0359:  MOVF   78,W
035A:  MOVWF  3C
035B:  MOVF   77,W
035C:  MOVWF  3B
.................... return t; 
035D:  MOVF   3B,W
035E:  MOVWF  77
035F:  MOVF   3C,W
0360:  MOVWF  78
0361:  MOVF   3D,W
0362:  MOVWF  79
0363:  MOVF   3E,W
0364:  MOVWF  7A
.................... } 
.................... /*-----hien thi thong tin chuan bi tren LCD---------*/ 
.................... void hien_thi_ban_dau(void){ 
.................... for(a=0;str[a]!='\0';a++){data=str[a];display();} 
*
012B:  CLRF   2C
012C:  MOVF   2C,W
012D:  CALL   033
012E:  XORLW  00
012F:  BTFSC  03.2
0130:  GOTO   138
0131:  MOVF   2C,W
0132:  CALL   033
0133:  MOVWF  78
0134:  MOVWF  28
0135:  CALL   0F9
0136:  INCF   2C,F
0137:  GOTO   12C
.................... moveto(1,12);data='.';display(); 
0138:  MOVLW  01
0139:  MOVWF  33
013A:  MOVLW  0C
013B:  MOVWF  34
013C:  CALL   11E
013D:  MOVLW  2E
013E:  MOVWF  28
013F:  CALL   0F9
.................... moveto(1,14);data=0xdf;display();data='C';display(); 
0140:  MOVLW  01
0141:  MOVWF  33
0142:  MOVLW  0E
0143:  MOVWF  34
0144:  CALL   11E
0145:  MOVLW  DF
0146:  MOVWF  28
0147:  CALL   0F9
0148:  MOVLW  43
0149:  MOVWF  28
014A:  CALL   0F9
.................... moveto(2,1); 
014B:  MOVLW  02
014C:  MOVWF  33
014D:  MOVLW  01
014E:  MOVWF  34
014F:  CALL   11E
.................... for(a=0;str2[a]!='\0';a++){data=str2[a];display();} 
0150:  CLRF   2C
0151:  MOVF   2C,W
0152:  CALL   056
0153:  XORLW  00
0154:  BTFSC  03.2
0155:  GOTO   15D
0156:  MOVF   2C,W
0157:  CALL   056
0158:  MOVWF  78
0159:  MOVWF  28
015A:  CALL   0F9
015B:  INCF   2C,F
015C:  GOTO   151
.................... } 
015D:  RETLW  00
.................... /*------Doc gia tri ADC va chuyen doi thanh nhiet do------*/ 
.................... void readADC(void){ 
.................... read_adc(adc_start_only);  //bat dau qua trinh ADC 
*
02D9:  BSF    1F.2
.................... while(!adc_done());  //doi cho den khi qua trinh chuyen doi ADC hoan tat 
02DA:  BTFSC  1F.2
02DB:  GOTO   2DA
.................... nhietdo=temp(read_adc(adc_read_only));  //doc gia tri nhiet do tu sensor 
02DC:  BTFSC  1F.2
02DD:  GOTO   2DC
02DE:  MOVF   1E,W
02DF:  MOVWF  7A
02E0:  BSF    03.5
02E1:  MOVF   1E,W
02E2:  BCF    03.5
02E3:  MOVWF  41
02E4:  MOVF   7A,W
02E5:  MOVWF  42
02E6:  CALL   15E
02E7:  MOVF   77,W
02E8:  MOVWF  33
02E9:  MOVF   78,W
02EA:  MOVWF  34
02EB:  MOVF   79,W
02EC:  MOVWF  35
02ED:  MOVF   7A,W
02EE:  MOVWF  36
02EF:  MOVF   36,W
02F0:  MOVWF  3A
02F1:  MOVF   35,W
02F2:  MOVWF  39
02F3:  MOVF   34,W
02F4:  MOVWF  38
02F5:  MOVF   33,W
02F6:  MOVWF  37
*
0365:  MOVF   7A,W
0366:  MOVWF  32
0367:  MOVF   79,W
0368:  MOVWF  31
0369:  MOVF   78,W
036A:  MOVWF  30
036B:  MOVF   77,W
036C:  MOVWF  2F
.................... } 
036D:  RETLW  00
.................... /*****Chuong trinh ngat Timer0 phuc vu viec quet Led*********/ 
.................... #int_timer0 
.................... void quetled(void){ 
.................... set_timer0(140);  //sau 6ms voi bo chia timer0 cho 256 
*
006A:  MOVLW  8C
006B:  MOVWF  01
.................... OE=0; 
006C:  BCF    08.7
.................... } 
.................... /*******Chuong trinh chinh*********/ 
006D:  BCF    0B.2
006E:  BCF    0A.3
006F:  BCF    0A.4
0070:  GOTO   01D
.................... void main(void){ 
*
03D6:  CLRF   04
03D7:  BCF    03.7
03D8:  MOVLW  1F
03D9:  ANDWF  03,F
03DA:  BSF    03.5
03DB:  BSF    1F.0
03DC:  BSF    1F.1
03DD:  BSF    1F.2
03DE:  BCF    1F.3
03DF:  MOVLW  07
03E0:  MOVWF  1C
.................... /******thiet lap ngat*******/ 
.................... enable_interrupts(int_timer0);   //cho phep ngat timer 0 hoat dong 
03E1:  BCF    03.5
03E2:  BSF    0B.5
.................... setup_timer_0(rtcc_internal|rtcc_div_256);  //thiet dat cac thong so cho timer 0 
03E3:  BSF    03.5
03E4:  MOVF   01,W
03E5:  ANDLW  C0
03E6:  IORLW  07
03E7:  MOVWF  01
.................... enable_interrupts(global); //cho phep ngat toan cuc hoat dong 
03E8:  MOVLW  C0
03E9:  BCF    03.5
03EA:  IORWF  0B,F
.................... /******thiet lap cac che do ADC******/ 
.................... setup_adc(adc_clock_internal); 
03EB:  BSF    03.5
03EC:  BCF    1F.6
03ED:  BCF    03.5
03EE:  BSF    1F.6
03EF:  BSF    1F.7
03F0:  BSF    03.5
03F1:  BSF    1F.7
03F2:  BCF    03.5
03F3:  BSF    1F.0
.................... setup_adc_ports(an0); 
03F4:  BSF    03.5
03F5:  BCF    1F.0
03F6:  BSF    1F.1
03F7:  BSF    1F.2
03F8:  BSF    1F.3
.................... set_adc_channel(0); 
03F9:  MOVLW  00
03FA:  MOVWF  78
03FB:  BCF    03.5
03FC:  MOVF   1F,W
03FD:  ANDLW  C7
03FE:  IORWF  78,W
03FF:  MOVWF  1F
.................... delay_us(10);  //delay 10us sau moi lan chon kenh doc gia tri ADC de ket qua adc chinh xac hon 
0400:  MOVLW  10
0401:  MOVWF  77
0402:  DECFSZ 77,F
0403:  GOTO   402
0404:  NOP
.................... /******thiet lap in/out cho cac port*********/ 
.................... set_tris_a(0x01); //chan a0 la ngo vao 
0405:  MOVLW  01
0406:  BSF    03.5
0407:  MOVWF  05
.................... set_tris_d(0x00); //tat ca port d deu la ngo ra 
0408:  MOVLW  00
0409:  MOVWF  08
.................... /*---khoi tao hien thi tren LCD---*/ 
.................... khoitao(0,1,0);   //che do 4 bit,2 dong,5x8 
040A:  BCF    03.5
040B:  CLRF   33
040C:  MOVLW  01
040D:  MOVWF  34
040E:  CLRF   35
040F:  GOTO   09E
.................... cursor(1,0,0); 
0410:  MOVLW  01
0411:  MOVWF  33
0412:  CLRF   34
0413:  CLRF   35
0414:  GOTO   0E8
.................... hien_thi_ban_dau(); 
0415:  CALL   12B
.................... /*------vong lap chuong trinh-----*/ 
.................... while (true){ 
.................... readADC();  //doc va chuyen doi gia tri ADC ra nhiet do(°C) 
0416:  CALL   2D9
.................... /*---tach so--*/ 
.................... x=nhietdo*10;  //bo dau cham dong phan cach phan thap phan,x la 1 so 16bit boi nhiet do la float 
0417:  MOVF   32,W
0418:  MOVWF  46
0419:  MOVF   31,W
041A:  MOVWF  45
041B:  MOVF   30,W
041C:  MOVWF  44
041D:  MOVF   2F,W
041E:  MOVWF  43
041F:  CLRF   4A
0420:  CLRF   49
0421:  MOVLW  20
0422:  MOVWF  48
0423:  MOVLW  82
0424:  MOVWF  47
0425:  CALL   245
0426:  MOVF   7A,W
0427:  MOVWF  42
0428:  MOVF   79,W
0429:  MOVWF  41
042A:  MOVF   78,W
042B:  MOVWF  40
042C:  MOVF   77,W
042D:  MOVWF  3F
042E:  CALL   2BA
042F:  MOVF   79,W
0430:  MOVWF  2E
0431:  MOVF   78,W
0432:  MOVWF  2D
.................... hangchuc=x/100; 
0433:  MOVF   2E,W
0434:  MOVWF  36
0435:  MOVF   2D,W
0436:  MOVWF  35
0437:  CLRF   38
0438:  MOVLW  64
0439:  MOVWF  37
043A:  CALL   36E
043B:  MOVF   78,W
043C:  MOVWF  29
.................... hangdonvi=(x/10)%10; 
043D:  MOVF   2E,W
043E:  MOVWF  36
043F:  MOVF   2D,W
0440:  MOVWF  35
0441:  CLRF   38
0442:  MOVLW  0A
0443:  MOVWF  37
0444:  CALL   36E
0445:  MOVF   79,W
0446:  MOVWF  34
0447:  MOVF   78,W
0448:  MOVWF  33
0449:  MOVF   79,W
044A:  MOVWF  36
044B:  MOVF   78,W
044C:  MOVWF  35
044D:  CLRF   38
044E:  MOVLW  0A
044F:  MOVWF  37
0450:  CALL   36E
0451:  MOVF   77,W
0452:  MOVWF  2A
.................... thapphan=x%10; 
0453:  MOVF   2E,W
0454:  MOVWF  36
0455:  MOVF   2D,W
0456:  MOVWF  35
0457:  CLRF   38
0458:  MOVLW  0A
0459:  MOVWF  37
045A:  CALL   36E
045B:  MOVF   77,W
045C:  MOVWF  2B
.................... /*---------hien thi nhiet do tren LCD-------------*/ 
.................... moveto(1,10); 
045D:  MOVLW  01
045E:  MOVWF  33
045F:  MOVLW  0A
0460:  MOVWF  34
0461:  CALL   11E
.................... data=0x30+hangchuc;display(); 
0462:  MOVLW  30
0463:  ADDWF  29,W
0464:  MOVWF  28
0465:  CALL   0F9
.................... data=0x30+hangdonvi;display(); 
0466:  MOVLW  30
0467:  ADDWF  2A,W
0468:  MOVWF  28
0469:  CALL   0F9
.................... moveto(1,13); 
046A:  MOVLW  01
046B:  MOVWF  33
046C:  MOVLW  0D
046D:  MOVWF  34
046E:  CALL   11E
.................... data=0x30+thapphan;display(); 
046F:  MOVLW  30
0470:  ADDWF  2B,W
0471:  MOVWF  28
0472:  CALL   0F9
.................... if(nhietdo>=100)  //neu nhiet do >=100°C thi hien canh bao 
0473:  CLRF   36
0474:  CLRF   35
0475:  MOVLW  48
0476:  MOVWF  34
0477:  MOVLW  85
0478:  MOVWF  33
0479:  MOVF   32,W
047A:  MOVWF  3A
047B:  MOVF   31,W
047C:  MOVWF  39
047D:  MOVF   30,W
047E:  MOVWF  38
047F:  MOVF   2F,W
0480:  MOVWF  37
0481:  CALL   393
0482:  BTFSC  03.0
0483:  GOTO   486
0484:  BTFSS  03.2
0485:  GOTO   4C2
....................    { 
....................       clear();moveto(1,5); 
0486:  CALL   3D2
0487:  MOVLW  01
0488:  MOVWF  33
0489:  MOVLW  05
048A:  MOVWF  34
048B:  CALL   11E
....................       for(a=0;str[a]!=':';a++){data=str[a];display();} 
048C:  CLRF   2C
048D:  MOVF   2C,W
048E:  CALL   033
048F:  SUBLW  3A
0490:  BTFSC  03.2
0491:  GOTO   499
0492:  MOVF   2C,W
0493:  CALL   033
0494:  MOVWF  78
0495:  MOVWF  28
0496:  CALL   0F9
0497:  INCF   2C,F
0498:  GOTO   48D
....................       moveto(2,1); 
0499:  MOVLW  02
049A:  MOVWF  33
049B:  MOVLW  01
049C:  MOVWF  34
049D:  CALL   11E
....................       for(a=0;str1[a]!='\0';a++){data=str1[a];display();} 
049E:  CLRF   2C
049F:  MOVF   2C,W
04A0:  CALL   041
04A1:  XORLW  00
04A2:  BTFSC  03.2
04A3:  GOTO   4AB
04A4:  MOVF   2C,W
04A5:  CALL   041
04A6:  MOVWF  78
04A7:  MOVWF  28
04A8:  CALL   0F9
04A9:  INCF   2C,F
04AA:  GOTO   49F
....................       while(nhietdo>=100)readADC();  //khong lam gi cho toi khi nhiet do xuong duoi 100°C 
04AB:  CLRF   36
04AC:  CLRF   35
04AD:  MOVLW  48
04AE:  MOVWF  34
04AF:  MOVLW  85
04B0:  MOVWF  33
04B1:  MOVF   32,W
04B2:  MOVWF  3A
04B3:  MOVF   31,W
04B4:  MOVWF  39
04B5:  MOVF   30,W
04B6:  MOVWF  38
04B7:  MOVF   2F,W
04B8:  MOVWF  37
04B9:  CALL   393
04BA:  BTFSC  03.0
04BB:  GOTO   4BE
04BC:  BTFSS  03.2
04BD:  GOTO   4C0
04BE:  CALL   2D9
04BF:  GOTO   4AB
....................       clear(); //xoa toan bo hien thi 
04C0:  CALL   3D2
....................       hien_thi_ban_dau();  //tra lai trang thai hien thi ban dau cho LCD 
04C1:  CALL   12B
....................    } 
.................... } 
04C2:  GOTO   416
.................... } 
....................  
04C3:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD NOWRT
