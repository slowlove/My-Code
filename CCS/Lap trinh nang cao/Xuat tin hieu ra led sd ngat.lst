CCS PCM C Compiler, Version 4.013, 28193               11-th3-08 22:51

               Filename: G:\Mach dien\Lap trinh C\CCS\Lap trinh nang cao\Xuat tin hieu ra led sd ngat.lst

               ROM used: 342 words (4%)
                         Largest free fragment is 2048
               RAM used: 16 (4%) at main() level
                         18 (5%) worst case
               Stack:    3 worst case (2 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   136
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  MOVF   7B,W
0016:  MOVWF  27
0017:  BCF    03.7
0018:  BCF    03.5
0019:  BTFSS  0B.4
001A:  GOTO   01D
001B:  BTFSC  0B.1
001C:  GOTO   030
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   27,W
0028:  MOVWF  7B
0029:  MOVF   20,W
002A:  MOVWF  0A
002B:  SWAPF  21,W
002C:  MOVWF  03
002D:  SWAPF  7F,F
002E:  SWAPF  7F,W
002F:  RETFIE
0030:  BCF    0A.3
0031:  BCF    0A.4
0032:  GOTO   033
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #device *=16 
.................... #fuses NOWDT,HS,NOPUT,NOPROTECT,NODEBUG,NOBROWNOUT,NOLVP,NOCPD,NOWRT      //khai bao cac thiet dat cho PIC 
.................... #use delay(clock=20000000)                               //khai bao su dung thach anh 20MHz de su dung ham delay cua chuong trinh 
*
003C:  MOVLW  2B
003D:  MOVWF  04
003E:  BCF    03.7
003F:  MOVF   00,W
0040:  BTFSC  03.2
0041:  GOTO   04F
0042:  MOVLW  06
0043:  MOVWF  78
0044:  CLRF   77
0045:  DECFSZ 77,F
0046:  GOTO   045
0047:  DECFSZ 78,F
0048:  GOTO   044
0049:  MOVLW  7B
004A:  MOVWF  77
004B:  DECFSZ 77,F
004C:  GOTO   04B
004D:  DECFSZ 00,F
004E:  GOTO   042
004F:  RETLW  00
.................... /****************************Ket thuc phan khai bao****************************/ 
.................... unsigned char i,x; 
.................... #int_ext 
.................... void thaongo(){ 
.................... i++; 
*
0033:  INCF   28,F
.................... if(i==3)i=0;} 
0034:  MOVF   28,W
0035:  SUBLW  03
0036:  BTFSC  03.2
0037:  CLRF   28
.................... /***************************************************/ 
0038:  BCF    0B.1
0039:  BCF    0A.3
003A:  BCF    0A.4
003B:  GOTO   01D
.................... void led1(){ 
....................       for(x =0x01;x<0x80;output_d(x=x<<1),delay_ms(100));    //dich trai 1 bit voi gia tri ban dau la 01h 
*
0050:  MOVLW  01
0051:  MOVWF  29
0052:  MOVF   29,W
0053:  SUBLW  7F
0054:  BTFSS  03.0
0055:  GOTO   061
0056:  BCF    03.0
0057:  RLF    29,F
0058:  BSF    03.5
0059:  CLRF   08
005A:  BCF    03.5
005B:  MOVF   29,W
005C:  MOVWF  08
005D:  MOVLW  64
005E:  MOVWF  2B
005F:  CALL   03C
0060:  GOTO   052
....................       for(x=0x03;x<0x80;output_d(x=x<<1),delay_ms(100));    //dich trai 1 bit voi gia tri la 03h 
0061:  MOVLW  03
0062:  MOVWF  29
0063:  MOVF   29,W
0064:  SUBLW  7F
0065:  BTFSS  03.0
0066:  GOTO   072
0067:  BCF    03.0
0068:  RLF    29,F
0069:  BSF    03.5
006A:  CLRF   08
006B:  BCF    03.5
006C:  MOVF   29,W
006D:  MOVWF  08
006E:  MOVLW  64
006F:  MOVWF  2B
0070:  CALL   03C
0071:  GOTO   063
....................       output_d(0x01);delay_ms(100); 
0072:  BSF    03.5
0073:  CLRF   08
0074:  MOVLW  01
0075:  BCF    03.5
0076:  MOVWF  08
0077:  MOVLW  64
0078:  MOVWF  2B
0079:  CALL   03C
....................       output_d(0x03);delay_ms(100); 
007A:  BSF    03.5
007B:  CLRF   08
007C:  MOVLW  03
007D:  BCF    03.5
007E:  MOVWF  08
007F:  MOVLW  64
0080:  MOVWF  2B
0081:  CALL   03C
....................       output_d(0x07);delay_ms(100); 
0082:  BSF    03.5
0083:  CLRF   08
0084:  MOVLW  07
0085:  BCF    03.5
0086:  MOVWF  08
0087:  MOVLW  64
0088:  MOVWF  2B
0089:  CALL   03C
....................       for(x=0x07;x<0x80;output_d(x=x<<1),delay_ms(100));    //dich trai 1 bit voi gia tri ban dau la 0x7 (00000111) 
008A:  MOVLW  07
008B:  MOVWF  29
008C:  MOVF   29,W
008D:  SUBLW  7F
008E:  BTFSS  03.0
008F:  GOTO   09B
0090:  BCF    03.0
0091:  RLF    29,F
0092:  BSF    03.5
0093:  CLRF   08
0094:  BCF    03.5
0095:  MOVF   29,W
0096:  MOVWF  08
0097:  MOVLW  64
0098:  MOVWF  2B
0099:  CALL   03C
009A:  GOTO   08C
....................       output_d(0x80);delay_ms(100); 
009B:  BSF    03.5
009C:  CLRF   08
009D:  MOVLW  80
009E:  BCF    03.5
009F:  MOVWF  08
00A0:  MOVLW  64
00A1:  MOVWF  2B
00A2:  CALL   03C
....................       output_d(0xC0);delay_ms(100); 
00A3:  BSF    03.5
00A4:  CLRF   08
00A5:  MOVLW  C0
00A6:  BCF    03.5
00A7:  MOVWF  08
00A8:  MOVLW  64
00A9:  MOVWF  2B
00AA:  CALL   03C
....................       output_d(0x70);delay_ms(100);} 
00AB:  BSF    03.5
00AC:  CLRF   08
00AD:  MOVLW  70
00AE:  BCF    03.5
00AF:  MOVWF  08
00B0:  MOVLW  64
00B1:  MOVWF  2B
00B2:  CALL   03C
00B3:  BCF    0A.3
00B4:  BCF    0A.4
00B5:  GOTO   154 (RETURN)
.................... void led2(){ 
....................       for(x =0x01;x<0xff;output_d(x=1+2*x),delay_ms(100));    //sang dan 
00B6:  MOVLW  01
00B7:  MOVWF  29
00B8:  INCFSZ 29,W
00B9:  GOTO   0BB
00BA:  GOTO   0C8
00BB:  BCF    03.0
00BC:  RLF    29,W
00BD:  ADDLW  01
00BE:  MOVWF  29
00BF:  BSF    03.5
00C0:  CLRF   08
00C1:  BCF    03.5
00C2:  MOVF   29,W
00C3:  MOVWF  08
00C4:  MOVLW  64
00C5:  MOVWF  2B
00C6:  CALL   03C
00C7:  GOTO   0B8
....................       for(x =0xff;x>0x01;output_d(x=(x-1)/2),delay_ms(100));    //tat dan 
00C8:  MOVLW  FF
00C9:  MOVWF  29
00CA:  MOVF   29,W
00CB:  SUBLW  01
00CC:  BTFSC  03.0
00CD:  GOTO   0DD
00CE:  MOVLW  01
00CF:  SUBWF  29,W
00D0:  MOVWF  77
00D1:  BCF    03.0
00D2:  RRF    77,W
00D3:  MOVWF  29
00D4:  BSF    03.5
00D5:  CLRF   08
00D6:  BCF    03.5
00D7:  MOVF   29,W
00D8:  MOVWF  08
00D9:  MOVLW  64
00DA:  MOVWF  2B
00DB:  CALL   03C
00DC:  GOTO   0CA
....................       output_d(0x01);delay_ms(600); 
00DD:  BSF    03.5
00DE:  CLRF   08
00DF:  MOVLW  01
00E0:  BCF    03.5
00E1:  MOVWF  08
00E2:  MOVLW  03
00E3:  MOVWF  2A
00E4:  MOVLW  C8
00E5:  MOVWF  2B
00E6:  CALL   03C
00E7:  DECFSZ 2A,F
00E8:  GOTO   0E4
....................       for(x =0x01;x<0x55;output_d(x =1+4*x),delay_ms(600));    //sang xen ke 
00E9:  MOVLW  01
00EA:  MOVWF  29
00EB:  MOVF   29,W
00EC:  SUBLW  54
00ED:  BTFSS  03.0
00EE:  GOTO   104
00EF:  RLF    29,W
00F0:  MOVWF  77
00F1:  RLF    77,F
00F2:  MOVLW  FC
00F3:  ANDWF  77,F
00F4:  MOVF   77,W
00F5:  ADDLW  01
00F6:  MOVWF  29
00F7:  BSF    03.5
00F8:  CLRF   08
00F9:  BCF    03.5
00FA:  MOVF   29,W
00FB:  MOVWF  08
00FC:  MOVLW  03
00FD:  MOVWF  2A
00FE:  MOVLW  C8
00FF:  MOVWF  2B
0100:  CALL   03C
0101:  DECFSZ 2A,F
0102:  GOTO   0FE
0103:  GOTO   0EB
....................       for(x=0x01;x<=0x14;x++){output_d(0xaa);delay_ms(100);output_d(0x55);delay_ms(100);}   //nhap nhay xen ke 
0104:  MOVLW  01
0105:  MOVWF  29
0106:  MOVF   29,W
0107:  SUBLW  14
0108:  BTFSS  03.0
0109:  GOTO   11C
010A:  BSF    03.5
010B:  CLRF   08
010C:  MOVLW  AA
010D:  BCF    03.5
010E:  MOVWF  08
010F:  MOVLW  64
0110:  MOVWF  2B
0111:  CALL   03C
0112:  BSF    03.5
0113:  CLRF   08
0114:  MOVLW  55
0115:  BCF    03.5
0116:  MOVWF  08
0117:  MOVLW  64
0118:  MOVWF  2B
0119:  CALL   03C
011A:  INCF   29,F
011B:  GOTO   106
....................       for(x=0x01;x<=0x14;x++){output_d(0xff);delay_ms(60);output_d(0);delay_ms(110);}}   //nhap nhay 
011C:  MOVLW  01
011D:  MOVWF  29
011E:  MOVF   29,W
011F:  SUBLW  14
0120:  BTFSS  03.0
0121:  GOTO   133
0122:  BSF    03.5
0123:  CLRF   08
0124:  MOVLW  FF
0125:  BCF    03.5
0126:  MOVWF  08
0127:  MOVLW  3C
0128:  MOVWF  2B
0129:  CALL   03C
012A:  BSF    03.5
012B:  CLRF   08
012C:  BCF    03.5
012D:  CLRF   08
012E:  MOVLW  6E
012F:  MOVWF  2B
0130:  CALL   03C
0131:  INCF   29,F
0132:  GOTO   11E
0133:  BCF    0A.3
0134:  BCF    0A.4
0135:  GOTO   154 (RETURN)
....................  /**********************************************************/ 
.................... void main(){ 
0136:  CLRF   04
0137:  BCF    03.7
0138:  MOVLW  1F
0139:  ANDWF  03,F
013A:  BSF    03.5
013B:  BSF    1F.0
013C:  BSF    1F.1
013D:  BSF    1F.2
013E:  BCF    1F.3
013F:  MOVLW  07
0140:  MOVWF  1C
.................... enable_interrupts(int_ext); 
0141:  BCF    03.5
0142:  BSF    0B.4
.................... enable_interrupts(global); 
0143:  MOVLW  C0
0144:  IORWF  0B,F
.................... ext_int_edge(h_to_l); 
0145:  BSF    03.5
0146:  BCF    01.6
.................... i=1; 
0147:  MOVLW  01
0148:  BCF    03.5
0149:  MOVWF  28
.................... while(1){ 
.................... switch(i){ 
014A:  MOVF   28,W
014B:  XORLW  01
014C:  BTFSC  03.2
014D:  GOTO   152
014E:  XORLW  03
014F:  BTFSC  03.2
0150:  GOTO   153
0151:  GOTO   154
.................... case 1:led1();break; 
0152:  GOTO   050
.................... case 2:led2();break; 
0153:  GOTO   0B6
.................... } 
.................... } 
0154:  GOTO   14A
.................... } 
....................  
....................  
....................  
....................  
....................  
0155:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD NOWRT
