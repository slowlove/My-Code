CCS PCM C Compiler, Version 4.068, 9234               23-th9-08 00:18

               Filename: G:\Lap trinh C\CCS\Lap trinh nang cao\led matrix.lst

               ROM used: 624 words (8%)
                         Largest free fragment is 2048
               RAM used: 23 (6%) at main() level
                         27 (7%) worst case
               Stack:    4 worst case (1 in main + 3 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   228
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  MOVF   7B,W
0016:  MOVWF  27
0017:  BCF    03.7
0018:  BCF    03.5
0019:  BTFSS  0B.5
001A:  GOTO   01D
001B:  BTFSC  0B.2
001C:  GOTO   030
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   27,W
0028:  MOVWF  7B
0029:  MOVF   20,W
002A:  MOVWF  0A
002B:  SWAPF  21,W
002C:  MOVWF  03
002D:  SWAPF  7F,F
002E:  SWAPF  7F,W
002F:  RETFIE
0030:  BCF    0A.3
0031:  BCF    0A.4
0032:  GOTO   165
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #device *=16 
.................... #fuses NOWDT,HS,NOPUT,NOPROTECT,NODEBUG,NOBROWNOUT,NOLVP,NOCPD,NOWRT      //khai bao cac thiet dat cho PIC 
.................... #use delay(clock=20000000)  //khai bao su dung thach anh 20MHz de su dung ham delay cua chuong trinh 
*
0214:  MOVLW  31
0215:  MOVWF  04
0216:  BCF    03.7
0217:  MOVF   00,W
0218:  BTFSC  03.2
0219:  GOTO   227
021A:  MOVLW  06
021B:  MOVWF  78
021C:  CLRF   77
021D:  DECFSZ 77,F
021E:  GOTO   21D
021F:  DECFSZ 78,F
0220:  GOTO   21C
0221:  MOVLW  7B
0222:  MOVWF  77
0223:  DECFSZ 77,F
0224:  GOTO   223
0225:  DECFSZ 00,F
0226:  GOTO   21A
0227:  RETLW  00
.................... /****************************Ket thuc phan khai bao****************************/ 
.................... int1 mau=0;  //bien mau dung de dao mau moi khi het 1 anh quet 
*
0233:  BCF    03.5
0234:  BCF    28.0
.................... unsigned char colour;   //bien xac dinh mau sac cua ki tu 
.................... unsigned char vitri,kitu,n=0;   //cac bien thuoc tinh cau ki tu 
0235:  CLRF   2C
.................... unsigned int16 value;   //bien dem trong chuong trinh ngat,co tac dung tranh dung ham 
....................                //delay trong ngat de chuong trinh chinh lam viec khac 
.................... /***********Hang ki tu duoc ma hoa duoi dang mang 8x8 toi da duoc 32 ki tu************/ 
.................... const unsigned char ma_kitu[32][8]=    //neu so luong hang vuot qua 32 se bi                            
....................              {                         //tran RAM vi mang toi da la 256 byte   
....................                             {0x00,0x66,0xE7,0xE7,0xE7,0xE7,0x66,0x00}  //I 
....................                             {0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3B,0x03}  //L 
....................                             {0xFF,0x99,0x66,0x7E,0xBD,0xDB,0xE7,0xFF}  //heart 
....................                             {0x3C,0x3C,0x3C,0x3C,0x99,0xC3,0xC3,0xE7}  //V 
....................                             {0x01,0x3D,0x37,0x07,0x07,0x37,0x3D,0x01}  //E 
....................                             {0x18,0xBD,0xDB,0xE7,0xEF,0xDF,0x3F,0xFF}  //Y 
....................                             {0xC7,0x39,0x39,0x39,0x39,0x39,0x39,0xC7}  //O 
....................                             {0x18,0xBD,0xBD,0xBD,0xBD,0xBD,0xBD,0xC3}  //U 
....................              }; 
.................... /********Chuong trinh con thay doi mau sac  cua chu************/ 
.................... void set_colour(void) 
....................    { 
....................       switch(n) 
....................          { 
*
013A:  MOVF   2C,W
013B:  ADDLW  F8
013C:  BTFSC  03.0
013D:  GOTO   156
013E:  ADDLW  08
013F:  GOTO   159
....................          case 0:colour=0;break; 
0140:  CLRF   29
0141:  GOTO   156
....................          case 1:colour=0;break; 
0142:  CLRF   29
0143:  GOTO   156
....................          case 2:colour=1;break; 
0144:  MOVLW  01
0145:  MOVWF  29
0146:  GOTO   156
....................          case 3:colour=1;break; 
0147:  MOVLW  01
0148:  MOVWF  29
0149:  GOTO   156
....................          case 4:colour=1;break; 
014A:  MOVLW  01
014B:  MOVWF  29
014C:  GOTO   156
....................          case 5:colour=1;break; 
014D:  MOVLW  01
014E:  MOVWF  29
014F:  GOTO   156
....................          case 6:colour=2;break; 
0150:  MOVLW  02
0151:  MOVWF  29
0152:  GOTO   156
....................          case 7:colour=2;break; 
0153:  MOVLW  02
0154:  MOVWF  29
0155:  GOTO   156
....................          } 
....................    }          
0156:  BCF    0A.3
0157:  BCF    0A.4
0158:  GOTO   172 (RETURN)
.................... /*************chuong trinh phuc vu ngat timer 0***************/ 
.................... #int_timer0 
.................... void quetled(void) 
....................    { 
....................       set_timer0(246);   //sau 8us 
*
0165:  MOVLW  F6
0166:  MOVWF  01
....................       ++value;    
0167:  INCF   2D,F
0168:  BTFSC  03.2
0169:  INCF   2E,F
....................    if(value==10)   //sau 8us*10=80us 
016A:  MOVF   2D,W
016B:  SUBLW  0A
016C:  BTFSS  03.2
016D:  GOTO   210
016E:  MOVF   2E,F
016F:  BTFSS  03.2
0170:  GOTO   210
....................       {   
....................          set_colour();  //xac lap mau cho tung dong 
0171:  GOTO   13A
....................          output_c(0);output_b(0xff);output_d(0xff);   //xoa toan bo nhung gi da hien thi truoc do,cong viec nay rat quan trong nham tranh chong mau khi hien thi 
0172:  MOVLW  00
0173:  MOVWF  2F
0174:  BSF    03.5
0175:  CLRF   07
0176:  BCF    03.5
0177:  CLRF   07
0178:  BSF    03.5
0179:  CLRF   06
017A:  MOVLW  FF
017B:  BCF    03.5
017C:  MOVWF  06
017D:  BSF    03.5
017E:  CLRF   08
017F:  BCF    03.5
0180:  MOVWF  08
....................          switch(colour) //chon mau truoc khi dua vao hien thi 
....................          { 
0181:  MOVF   29,W
0182:  BTFSC  03.2
0183:  GOTO   18B
0184:  XORLW  01
0185:  BTFSC  03.2
0186:  GOTO   1A5
0187:  XORLW  03
0188:  BTFSC  03.2
0189:  GOTO   1DB
018A:  GOTO   1F5
....................          case 0:output_d(ma_kitu[kitu][n]);   //mau xanh                
018B:  RLF    2B,W
018C:  MOVWF  32
018D:  CLRF   33
018E:  RLF    33,F
018F:  RLF    32,F
0190:  RLF    33,F
0191:  RLF    32,F
0192:  RLF    33,F
0193:  MOVLW  F8
0194:  ANDWF  32,F
0195:  MOVF   2C,W
0196:  ADDWF  32,W
0197:  MOVWF  78
0198:  MOVF   33,W
0199:  MOVWF  7A
019A:  BTFSC  03.0
019B:  INCF   7A,F
019C:  MOVF   78,W
019D:  CALL   033
019E:  MOVWF  34
019F:  BSF    03.5
01A0:  CLRF   08
01A1:  BCF    03.5
01A2:  MOVF   34,W
01A3:  MOVWF  08
....................             break; 
01A4:  GOTO   1F5
....................          case 1: 
....................             {   
....................                if(mau==0)output_d(ma_kitu[kitu][n]); 
01A5:  BTFSC  28.0
01A6:  GOTO   1C1
01A7:  RLF    2B,W
01A8:  MOVWF  32
01A9:  CLRF   33
01AA:  RLF    33,F
01AB:  RLF    32,F
01AC:  RLF    33,F
01AD:  RLF    32,F
01AE:  RLF    33,F
01AF:  MOVLW  F8
01B0:  ANDWF  32,F
01B1:  MOVF   2C,W
01B2:  ADDWF  32,W
01B3:  MOVWF  78
01B4:  MOVF   33,W
01B5:  MOVWF  7A
01B6:  BTFSC  03.0
01B7:  INCF   7A,F
01B8:  MOVF   78,W
01B9:  CALL   033
01BA:  MOVWF  34
01BB:  BSF    03.5
01BC:  CLRF   08
01BD:  BCF    03.5
01BE:  MOVF   34,W
01BF:  MOVWF  08
....................                else output_b(ma_kitu[kitu][n]); 
01C0:  GOTO   1DA
01C1:  RLF    2B,W
01C2:  MOVWF  32
01C3:  CLRF   33
01C4:  RLF    33,F
01C5:  RLF    32,F
01C6:  RLF    33,F
01C7:  RLF    32,F
01C8:  RLF    33,F
01C9:  MOVLW  F8
01CA:  ANDWF  32,F
01CB:  MOVF   2C,W
01CC:  ADDWF  32,W
01CD:  MOVWF  78
01CE:  MOVF   33,W
01CF:  MOVWF  7A
01D0:  BTFSC  03.0
01D1:  INCF   7A,F
01D2:  MOVF   78,W
01D3:  CALL   033
01D4:  MOVWF  34
01D5:  BSF    03.5
01D6:  CLRF   06
01D7:  BCF    03.5
01D8:  MOVF   34,W
01D9:  MOVWF  06
....................             } 
....................             break; 
01DA:  GOTO   1F5
....................          case 2:output_b(ma_kitu[kitu][n]);   //mau do               
01DB:  RLF    2B,W
01DC:  MOVWF  32
01DD:  CLRF   33
01DE:  RLF    33,F
01DF:  RLF    32,F
01E0:  RLF    33,F
01E1:  RLF    32,F
01E2:  RLF    33,F
01E3:  MOVLW  F8
01E4:  ANDWF  32,F
01E5:  MOVF   2C,W
01E6:  ADDWF  32,W
01E7:  MOVWF  78
01E8:  MOVF   33,W
01E9:  MOVWF  7A
01EA:  BTFSC  03.0
01EB:  INCF   7A,F
01EC:  MOVF   78,W
01ED:  CALL   033
01EE:  MOVWF  34
01EF:  BSF    03.5
01F0:  CLRF   06
01F1:  BCF    03.5
01F2:  MOVF   34,W
01F3:  MOVWF  06
....................             break; 
01F4:  GOTO   1F5
....................          } 
....................          output_c(vitri<<n);  //quet cot 
01F5:  MOVF   2A,W
01F6:  MOVWF  32
01F7:  MOVF   2C,W
01F8:  MOVWF  78
01F9:  BTFSC  03.2
01FA:  GOTO   1FF
01FB:  BCF    03.0
01FC:  RLF    32,F
01FD:  DECFSZ 78,F
01FE:  GOTO   1FB
01FF:  MOVLW  00
0200:  MOVWF  2F
0201:  BSF    03.5
0202:  CLRF   07
0203:  BCF    03.5
0204:  MOVF   32,W
0205:  MOVWF  07
....................          n++; 
0206:  INCF   2C,F
....................          if(n==8) 
0207:  MOVF   2C,W
0208:  SUBLW  08
0209:  BTFSS  03.2
020A:  GOTO   20E
....................             {   
....................                n=0;  //quet lai tu dong dau dong thoi dao mau` 
020B:  CLRF   2C
....................                mau=!mau; //dao? mau`    
020C:  MOVLW  01
020D:  XORWF  28,F
....................             } 
....................          value=0; //khoi tao lai bien dem          
020E:  CLRF   2E
020F:  CLRF   2D
....................       } 
....................    } 
.................... /*********Chuong trinh chinh**************/ 
0210:  BCF    0B.2
0211:  BCF    0A.3
0212:  BCF    0A.4
0213:  GOTO   01D
.................... void main(void){ 
*
0228:  CLRF   04
0229:  BCF    03.7
022A:  MOVLW  1F
022B:  ANDWF  03,F
022C:  BSF    03.5
022D:  BSF    1F.0
022E:  BSF    1F.1
022F:  BSF    1F.2
0230:  BCF    1F.3
0231:  MOVLW  07
0232:  MOVWF  1C
.................... output_b(0);output_d(0);output_c(0);   //tat port B&C de tranh Error khi nap chuong trinh 
*
0238:  BSF    03.5
0239:  CLRF   06
023A:  BCF    03.5
023B:  CLRF   06
023C:  BSF    03.5
023D:  CLRF   08
023E:  BCF    03.5
023F:  CLRF   08
0240:  MOVLW  00
0241:  MOVWF  2F
0242:  BSF    03.5
0243:  CLRF   07
0244:  BCF    03.5
0245:  CLRF   07
.................... delay_ms(5000);   //doi 5s de cho` tin hieu nap chuong trinh 
0246:  MOVLW  14
0247:  MOVWF  30
0248:  MOVLW  FA
0249:  MOVWF  31
024A:  CALL   214
024B:  DECFSZ 30,F
024C:  GOTO   248
.................... enable_interrupts(int_timer0);   //cho phep ngat timer 0 hoat dong 
024D:  BSF    0B.5
.................... setup_timer_0(rtcc_internal|rtcc_div_4);  //thiet dat cac thong so cho timer 0 
024E:  BSF    03.5
024F:  MOVF   01,W
0250:  ANDLW  C0
0251:  IORLW  01
0252:  MOVWF  01
.................... enable_interrupts(global); //cho phep ngat toan cuc hoat dong 
0253:  MOVLW  C0
0254:  BCF    03.5
0255:  IORWF  0B,F
.................... kitu=0;  //bat dau hien thi tu ki tu dau tien trong danh sach mang 
0256:  CLRF   2B
.................... while(true) 
....................    { 
....................       vitri=1; //bat quet tu hang tren cung(hang dau tien) 
0257:  MOVLW  01
0258:  MOVWF  2A
....................       delay_ms(350);     
0259:  MOVLW  02
025A:  MOVWF  30
025B:  MOVLW  AF
025C:  MOVWF  31
025D:  CALL   214
025E:  DECFSZ 30,F
025F:  GOTO   25B
....................       while(vitri!=0) 
....................          {   
0260:  MOVF   2A,F
0261:  BTFSC  03.2
0262:  GOTO   269
....................             vitri<<=1;  //dich ca chu cho den khi het dong 
0263:  BCF    03.0
0264:  RLF    2A,F
....................             delay_ms(70); 
0265:  MOVLW  46
0266:  MOVWF  31
0267:  CALL   214
....................          } 
0268:  GOTO   260
....................       kitu++;  //chuyen sang ki tu tiep theo 
0269:  INCF   2B,F
....................       if(kitu==8)kitu=0;   //vong lai tu dau neu gap ki tu thu 8 
026A:  MOVF   2B,W
026B:  SUBLW  08
026C:  BTFSC  03.2
026D:  CLRF   2B
....................    } 
026E:  GOTO   257
.................... } 
026F:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD NOWRT
